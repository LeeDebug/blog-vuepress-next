"use strict";(self.webpackChunkblog_vuepress_next=self.webpackChunkblog_vuepress_next||[]).push([[8658],{1638:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-55403de0",path:"/views/front-end/copy-webpack-plugin.html",title:"copy-webpack-plugin处理单独js文件",lang:"en-US",frontmatter:{title:"copy-webpack-plugin处理单独js文件",categories:["Webpack"],tags:["Webpack"],keywords:"Webpack",description:"copy-webpack-plugin处理单独js文件",cover:"https://cdn.jsdelivr.net/gh/LeeDebug/PicGo/img/20210225123255.png",date:"2021-01-08T22:42:14.000Z"},excerpt:"",headers:[],git:{createdTime:163785445e4,updatedTime:163785445e4,contributors:[{name:"licc",email:"961150665@qq.com",commits:1}]}}},255:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<blockquote><p>当文件在<code>static或public</code>目录下但又想对文件进行编译处理，即可在此插件中进行配置</p></blockquote><h1 id="使用说明" tabindex="-1"><a class="header-anchor" href="#使用说明" aria-hidden="true">#</a> 使用说明</h1><p><code>copy-webpack-plugin</code>是webpack自带的插件，本意是将某个文件/文件夹，从<code>dir1</code>处复制到<code>dist</code>下，即当你在运行<code>npm run build</code>时，<code>static或public</code>目录下的文件就是走的此插件</p><h1 id="配置信息" tabindex="-1"><a class="header-anchor" href="#配置信息" aria-hidden="true">#</a> 配置信息</h1><p>因为我使用的是基于<code>@vue/cli-service</code>的<code>vue3.x</code>，所以是在<code>vue.config.js</code>中设置（如果是vue2.x的版本，请在<code>webpack.base.js</code>中设置）</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 引入</span>\n<span class="token keyword">const</span> CopyWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;copy-webpack-plugin&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> UglifyJS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;uglify-js&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 使用</span>\n<span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...others,</span>\n  <span class="token function-variable function">configureWebpack</span><span class="token operator">:</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n      <span class="token comment">// see document: https://www.npmjs.com/package/copy-webpack-plugin/v/5.1.2</span>\n      <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          from<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;./public/handle.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 文件名或目录</span>\n          to<span class="token operator">:</span> <span class="token string">&#39;./[name].[contenthash].[ext]&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 文件名后添加hash值</span>\n          <span class="token function">transform</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 修改文件内容</span>\n            <span class="token keyword">const</span> code <span class="token operator">=</span> UglifyJS<span class="token punctuation">.</span><span class="token function">minify</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>code<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> code<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token function">transformPath</span><span class="token punctuation">(</span><span class="token parameter">targetPath<span class="token punctuation">,</span> absolutePath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 修改文件路径：目标路径、源路径</span>\n            newHashPath <span class="token operator">=</span> targetPath<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> targetPath<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          from<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;./public/index2.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          to<span class="token operator">:</span> <span class="token string">&#39;./[name].[ext]&#39;</span><span class="token punctuation">,</span>\n          <span class="token function">transform</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> code <span class="token operator">=</span> UglifyJS<span class="token punctuation">.</span><span class="token function">minify</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>code<span class="token punctuation">;</span>\n            <span class="token keyword">return</span> code<span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          force<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 覆盖已经存在的文件</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> config<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h1 id="祝君无bug" tabindex="-1"><a class="header-anchor" href="#祝君无bug" aria-hidden="true">#</a> 祝君无Bug~</h1>',7),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])}}]);