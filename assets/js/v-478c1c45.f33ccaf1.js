"use strict";(self.webpackChunkblog_vuepress_next=self.webpackChunkblog_vuepress_next||[]).push([[2333],{866:(s,a,n)=>{n.r(a),n.d(a,{data:()=>e});const e={key:"v-478c1c45",path:"/views/front-end/Mac-configure-multiple-SSH-Key.html",title:"Mac配置多个SSH-Key",lang:"en-US",frontmatter:{title:"Mac配置多个SSH-Key",categories:["Git"],tags:["Git"],keywords:"Git",description:"Mac配置多个SSH-Key",cover:"https://cdn.jsdelivr.net/gh/LeeDebug/PicGo/img/20201211231351.png",date:"2020-12-11T23:11:41.000Z"},excerpt:"",headers:[{level:2,title:"进入到ssh文件夹下",slug:"进入到ssh文件夹下",children:[]},{level:2,title:"生成一个ssh-key",slug:"生成一个ssh-key",children:[]},{level:2,title:"将ssh-key添加到ssh-agent",slug:"将ssh-key添加到ssh-agent",children:[]}],git:{createdTime:163785445e4,updatedTime:163785445e4,contributors:[{name:"licc",email:"961150665@qq.com",commits:1}]}}},2729:(s,a,n)=>{n.r(a),n.d(a,{default:()=>r});const e=(0,n(6252).uE)('<blockquote><p>随着项目与能力的提升与扩展，一台电脑上同时用着多个git仓库的情况越来越普遍，所以我们需要创建多个ssh key来对应不同的账号。本文以github为例</p></blockquote><h1 id="本地配置ssh秘钥和公钥" tabindex="-1"><a class="header-anchor" href="#本地配置ssh秘钥和公钥" aria-hidden="true">#</a> 本地配置ssh秘钥和公钥</h1><h2 id="进入到ssh文件夹下" tabindex="-1"><a class="header-anchor" href="#进入到ssh文件夹下" aria-hidden="true">#</a> 进入到ssh文件夹下</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>→ <span class="token builtin class-name">cd</span> ~/.ssh/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="生成一个ssh-key" tabindex="-1"><a class="header-anchor" href="#生成一个ssh-key" aria-hidden="true">#</a> 生成一个ssh-key</h2><p>引号内填写你github对应的邮箱</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>→ ssh-keygen -t rsa -b <span class="token number">4096</span> -C <span class="token string">&quot;your email&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>如果你之前mac上创建过ssh-key，在<code>.ssh</code>文件夹下会有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，分别为秘钥和公钥；当再次创建时，会有如下提示：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Generating public/private rsa key pair.\nEnter <span class="token function">file</span> <span class="token keyword">in</span> <span class="token function">which</span> to save the key <span class="token punctuation">(</span>/Users/xxx/.ssh/id_rsa<span class="token punctuation">)</span>:\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如果想覆盖之前的文件直接回车即可；如果想创建新的ssh-key，则需要在此处输入新的名称，如<code>id_rsa_github</code>，回车后会提示你下次使用此ssh-key时是否需要密码，如果是个人电脑，直接回车即可（如果需要，设置便可）</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Enter passphrase <span class="token punctuation">(</span>empty <span class="token keyword">for</span> no passphrase<span class="token punctuation">)</span>:\nEnter same passphrase again:\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>设置完密码后，会提示你ssh-key设置成功</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>our identification has been saved <span class="token keyword">in</span> id_rsa_github.\nYour public key has been saved <span class="token keyword">in</span> id_rsa_github.pub.\nThe key fingerprint is:\nSHA256: hash值 你的邮箱\nThe key&#39;s randomart image is:\n+---<span class="token punctuation">[</span>RSA <span class="token number">4096</span><span class="token punctuation">]</span>----+\n<span class="token operator">|</span>        .@/0+ o  <span class="token operator">|</span>\n<span class="token operator">|</span>        <span class="token assign-left variable">o</span><span class="token operator">=</span>+0*O o <span class="token operator">|</span>\n<span class="token operator">|</span>        .o<span class="token operator">=</span>.*** <span class="token builtin class-name">.</span><span class="token operator">|</span>\n<span class="token operator">|</span>         o.o B <span class="token operator">=</span> <span class="token operator">|</span>\n<span class="token operator">|</span>        @ + + * <span class="token builtin class-name">.</span><span class="token operator">|</span>\n<span class="token operator">|</span>       o + + o <span class="token builtin class-name">.</span> <span class="token operator">|</span>\n<span class="token operator">|</span>        o <span class="token builtin class-name">.</span> o    <span class="token operator">|</span>\n<span class="token operator">|</span>                 <span class="token operator">|</span>\n<span class="token operator">|</span>                 <span class="token operator">|</span>\n+----<span class="token punctuation">[</span>SHA256<span class="token punctuation">]</span>-----+\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>查看<code>.ssh</code>文件夹下的新文件，则会看到刚才新生成的<code>id_rsa_github</code>秘钥和<code>id_rsa_github.pub</code>公钥</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>→ <span class="token function">ls</span>\nid_rsa\nid_rsa.pub\nid_rsa_github\nid_rsa_github.pub\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="将ssh-key添加到ssh-agent" tabindex="-1"><a class="header-anchor" href="#将ssh-key添加到ssh-agent" aria-hidden="true">#</a> 将ssh-key添加到ssh-agent</h2><p>因为本地默认只读<code>id_rsa</code>，我们想要使用新的秘钥对则需要把新添加的ssh-key添加到ssh-agent</p><p>首先，查看ssh agent所有密钥对（如果有以下提示，则表示从未添加过）</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>→ ssh-add -l\nThe agent has no identities.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>将新的ssh-key添加到ssh agent</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>→ ssh-add id_rsa_github\nIdentity added: id_rsa_github <span class="token punctuation">(</span>id_rsa_github<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>此时再次查看ssh agent</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>→ ssh-add -l\n<span class="token number">4096</span> SHA256: hash值 id_rsa_github <span class="token punctuation">(</span>RSA<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h1 id="配置github的ssh-key" tabindex="-1"><a class="header-anchor" href="#配置github的ssh-key" aria-hidden="true">#</a> 配置github的ssh-key</h1><p>首先查看我们刚配置好的ssh-key的公钥，即以<code>*.pub</code>为后缀名的文件。复制整个文件的内容，即公钥信息</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>→ <span class="token function">cat</span> id_rsa_github.pub\nssh-rsa 公钥 你的邮箱\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>登录github后，在右上角的头像下拉列表中选择<code>Settings</code>选项，在左侧菜单中选择<code>SSH and GPG keys</code>，即可看到当前的SSH Keys，点击右上角绿色的<code>New SSH Key</code>按钮，在<code>Key</code>下方的文本框中，粘贴你的公钥信息，会默认以你的邮箱作为<code>title</code>（也可自行更改），点击下方的<code>Add SSH Key</code>即可。步骤如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/LeeDebug/PicGo/img/20201211234542.png" alt="github的ssh-key"></p><h1 id="测试连接" tabindex="-1"><a class="header-anchor" href="#测试连接" aria-hidden="true">#</a> 测试连接</h1><p>回到自己的项目仓库下<code>git fetch</code>；或打开控制台，输入以下命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>→ <span class="token function">ssh</span> -T git@github.com\nHi LeeDebug<span class="token operator">!</span> You&#39;ve successfully authenticated, but GitHub does not provide shell access.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>到此，你的ssh-key已经可以正常使用，你可以使用ssh的方式去clone项目了</p><h1 id="祝君无bug" tabindex="-1"><a class="header-anchor" href="#祝君无bug" aria-hidden="true">#</a> 祝君无Bug~</h1>',33),p={},r=(0,n(3744).Z)(p,[["render",function(s,a){return e}]])}}]);