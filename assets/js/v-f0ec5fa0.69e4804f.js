"use strict";(self.webpackChunkblog_vuepress_next=self.webpackChunkblog_vuepress_next||[]).push([[4474],{1641:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-f0ec5fa0",path:"/views/front-end/hexo-blog.html",title:"从0开始搭建Hexo个人博客",lang:"en-US",frontmatter:{title:"从0开始搭建Hexo个人博客",categories:["document"],tags:["document"],keywords:"document",description:"document",cover:"https://cdn.jsdelivr.net/gh/LeeDebug/PicGo/img/20201111170432.png",date:"2020-06-07T23:23:55.000Z"},excerpt:"",headers:[{level:2,title:"安装Git",slug:"安装git",children:[]},{level:2,title:"安装Node.js",slug:"安装node-js",children:[]},{level:2,title:"安装Hexo",slug:"安装hexo",children:[]},{level:2,title:"创建博客项目",slug:"创建博客项目",children:[]},{level:2,title:"将Hexo部署到GitHub",slug:"将hexo部署到github",children:[]}],git:{createdTime:1638196944e3,updatedTime:1638196944e3,contributors:[{name:"qducc",email:"961150665@qq.com",commits:1}]}}},1224:(n,s,e)=>{e.r(s),e.d(s,{default:()=>w});var a=e(6252);const l=(0,a._)("blockquote",null,[(0,a._)("p",null,"搭建个人博客是每个程序员成长的必经之路，不但可以记录与分享自己在学习过程中Get到的新技能、新知识，还能顺便提高一下自己的文采。")],-1),p=(0,a._)("h1",{id:"hexo简介",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#hexo简介","aria-hidden":"true"},"#"),(0,a.Uk)(" Hexo简介")],-1),r=(0,a._)("p",null,"Hexo是一款基于Node.js的静态博客框架，可方便快捷的托管于GitHub上，是搭建博客的首选框架。",-1),c=(0,a.Uk)("根据"),i={href:"https://hexo.io/zh-cn/",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("Hexo官网"),t=(0,a.Uk)("介绍，主要有以下四大优点："),u=(0,a._)("ul",null,[(0,a._)("li",null,"超快速度： Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。"),(0,a._)("li",null,"支持 Markdown：Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。"),(0,a._)("li",null,"一键部署：只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台。"),(0,a._)("li",null,"插件和可扩展性：强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成")],-1),b=(0,a._)("h1",{id:"hexo搭建步骤",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#hexo搭建步骤","aria-hidden":"true"},"#"),(0,a.Uk)(" Hexo搭建步骤")],-1),d=(0,a._)("h2",{id:"安装git",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#安装git","aria-hidden":"true"},"#"),(0,a.Uk)(" 安装Git")],-1),m=(0,a.Uk)("Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。无论是个人代码管理还是团队合作开发中，学会git那都是百利而无一害的。如果对git还不是很了解，推荐去"),h={href:"https://www.liaoxuefeng.com/wiki/896043488029600",target:"_blank",rel:"noopener noreferrer"},g=(0,a.Uk)("廖雪峰老师的博客"),k=(0,a.Uk)("或者先看一下"),v={href:"https://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"},x=(0,a.Uk)("Git Book"),f=(0,a.Uk)("的前三章。"),_=(0,a.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 安装命令</span>\n$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span>\n\n<span class="token comment"># 查看版本</span>\n$ <span class="token function">git</span> --version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="安装node-js" tabindex="-1"><a class="header-anchor" href="#安装node-js" aria-hidden="true">#</a> 安装Node.js</h2><p>Hexo是基于Node.js环境运行的，所以需要安装Node环境及npm包管理工具。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># node安装命令</span>\n$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nodejs\n\n<span class="token comment"># 查看node版本</span>\n$ node -v\n\n<span class="token comment"># npm安装命令</span>\n$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">npm</span>\n\n<span class="token comment"># 查看npm版本</span>\n$ <span class="token function">npm</span> -v\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="安装hexo" tabindex="-1"><a class="header-anchor" href="#安装hexo" aria-hidden="true">#</a> 安装Hexo</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 利用npm全局安装hexo脚手架</span>\n$ <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli\n\n<span class="token comment"># 查看hexo版本</span>\n$ hexo -v\n\n<span class="token comment"># 删除hexo</span>\n$ <span class="token function">npm</span> uninstall -g hexo-cli\n\n<span class="token comment"># 查看npm全局版本</span>\n$ <span class="token function">npm</span> <span class="token function">ls</span> -g --depth<span class="token operator">=</span><span class="token number">0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="创建博客项目" tabindex="-1"><a class="header-anchor" href="#创建博客项目" aria-hidden="true">#</a> 创建博客项目</h2><p>到此为止，装好了node环境以及hexo框架，基本上前期的环境配置就完成了，接下来就可以创建自己的博客项目了。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 新建一个文件夹，如名为blog</span>\n$ <span class="token function">mkdir</span> blog\n\n<span class="token comment"># 进入blog文件夹</span>\n$ <span class="token builtin class-name">cd</span> blog\n\n<span class="token comment"># 初始化hexo</span>\n$ hexo init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>初始化成功后，blog文件夹下会出现如下文件：</p><ul><li>_config.yml: 博客的核心配置文件（设置主体、标题等属性）</li><li>package.json：项目所需的依赖包</li><li>source：用来存放你的文章</li><li>themes：放下下载的主题</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 安装所需依赖</span>\n$ <span class="token function">npm</span> <span class="token function">install</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>安装成功后，会出现node_modules文件夹，文件夹内即安装的package.json内所有依赖包。接下来就可以配置并启动hexo了</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 清除缓存文件 (db.json) 和已生成的静态文件 (public)</span>\n$ hexo clean\n\n<span class="token comment"># 生成静态文件，generate</span>\n$ hexo g\n\n<span class="token comment"># 部署博客网站，deploy</span>\n$ hexo d\n\n<span class="token comment"># 启动服务器，server</span>\n$ hexo s -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>运行成功后，浏览器打开<code>http://localhost:4000</code>便可看到你的hexo博客项目了，除了主题有点儿吃藕，还是挺不错的~</p><h2 id="将hexo部署到github" tabindex="-1"><a class="header-anchor" href="#将hexo部署到github" aria-hidden="true">#</a> 将Hexo部署到GitHub</h2><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件_config.yml，翻到最后，修改为下面这样，其中LeeDebug改为你的GitHub账户名</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deploy:\n  type: <span class="token function">git</span>\n  repo: https://github.com/LeeDebug/LeeDebug.github.io.git\n  branch: master\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>这个时候需要先安装deploy-git，也就是部署的命令,这样你才能用命令部署到GitHub。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>部署项目</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ hexo clean\n$ hexo g\n$ hexo d\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>部署成功后，浏览器打开<code>http://LeeDebug.github.io</code>，就能看到你的博客了</p><h1 id="安装主题" tabindex="-1"><a class="header-anchor" href="#安装主题" aria-hidden="true">#</a> 安装主题</h1>',24),H=(0,a.Uk)("首先下载主题包，如"),$={href:"https://github.com/jerryc127/hexo-theme-butterfly",target:"_blank",rel:"noopener noreferrer"},y=(0,a.Uk)("butterfly"),j=(0,a.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i hexo-theme-butterfly\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>配置<code>_config.yml</code>文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>theme: butterfly\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h1 id="新建文章" tabindex="-1"><a class="header-anchor" href="#新建文章" aria-hidden="true">#</a> 新建文章</h1><p>首先修改<code>/scaffolds/post.md</code>文件模板，改为想要的形式，比如</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>---\ntitle: <span class="token punctuation">{</span><span class="token punctuation">{</span> title <span class="token punctuation">}</span><span class="token punctuation">}</span>\ntags:\n- Hexo\ncategorier:\n- Hexo\nkeywords: <span class="token string">&quot;Hexo,笔记&quot;</span>\ndate: <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">date</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\ndescription: <span class="token string">&quot;描述&quot;</span>\ncover: https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>利用post模板新建文章</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>hexo new post 文章标题\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>随后在<code>source/_posts/</code>文件夹下会出现<code>文章标题</code>的文件夹和<code>文章标题.md</code>的MarkDown文件，文章内容在<code>*.md</code>文件内编辑即可</p><h1 id="新增分类页" tabindex="-1"><a class="header-anchor" href="#新增分类页" aria-hidden="true">#</a> 新增分类页</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>hexo new page categories\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>将<code>/source/categories/index.md/</code>这个文件改为以下内容</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>---\ntitle: 分类\ndate: <span class="token number">2018</span>-01-05 00:00:00\ntype: <span class="token string">&quot;categories&quot;</span>\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h1 id="新增标签页" tabindex="-1"><a class="header-anchor" href="#新增标签页" aria-hidden="true">#</a> 新增标签页</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>hexo new page tags\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>将<code>/source/tags/index.md/</code>这个文件改为以下内容</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>---\ntitle: 标签\ndate: <span class="token number">2018</span>-01-05 00:00:00\ntype: <span class="token string">&quot;tags&quot;</span>\n---\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h1 id="祝君无bug" tabindex="-1"><a class="header-anchor" href="#祝君无bug" aria-hidden="true">#</a> 祝君无Bug~</h1>',18),w={render:function(n,s){const e=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,p,r,(0,a._)("p",null,[c,(0,a._)("a",i,[o,(0,a.Wm)(e)]),t]),u,b,d,(0,a._)("p",null,[m,(0,a._)("a",h,[g,(0,a.Wm)(e)]),k,(0,a._)("a",v,[x,(0,a.Wm)(e)]),f]),_,(0,a._)("p",null,[H,(0,a._)("a",$,[y,(0,a.Wm)(e)])]),j],64)}}}}]);