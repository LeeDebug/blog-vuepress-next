"use strict";(self.webpackChunkblog_vuepress_next=self.webpackChunkblog_vuepress_next||[]).push([[7589],{7806:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-5e72a7c2",path:"/views/front-end/Simple-git-push-script.html",title:"git仓库推送脚本（本地简易版）",lang:"en-US",frontmatter:{title:"git仓库推送脚本（本地简易版）",categories:["Git"],tags:["Git"],keywords:"Git",description:"git仓库推送脚本（本地简易版）",cover:"https://cdn.jsdelivr.net/gh/LeeDebug/PicGo/img/20201226234636.png",date:"2020-12-26T23:32:34.000Z"},excerpt:"",headers:[],git:{createdTime:163785445e4,updatedTime:163785445e4,contributors:[{name:"licc",email:"961150665@qq.com",commits:1}]}}},6319:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<blockquote><p>由于每次写完代码都要执行一大堆命令来将本地代码推送至远程仓库，所以索性写一个sh脚本</p></blockquote><h1 id="新建push-sh文件" tabindex="-1"><a class="header-anchor" href="#新建push-sh文件" aria-hidden="true">#</a> 新建<code>push.sh</code>文件：</h1><p>在项目主目录，即<code>/git</code>所在目录新建<code>push.sh</code>文件，并复制以下内容：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> → 暂存选取所有代码\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n\n<span class="token builtin class-name">read</span> -p <span class="token string">&quot;→ 请输入您的commit提交信息：&quot;</span> MSG\n\n<span class="token builtin class-name">echo</span> → 提交所有暂存代码\n<span class="token function">git</span> commit -m <span class="token string">&quot;<span class="token variable">$MSG</span>&quot;</span>\n\n<span class="token builtin class-name">echo</span> → 将代码推送至三端git仓库\n<span class="token function">git</span> push -u all master\n\n<span class="token comment"># 如果不是hexo项目可忽略以下内容</span>\n<span class="token builtin class-name">echo</span> → Hexo自动构建及部署\n<span class="token function">npm</span> run clean\n<span class="token function">npm</span> run build\n<span class="token function">npm</span> run deploy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h1 id="运行脚本" tabindex="-1"><a class="header-anchor" href="#运行脚本" aria-hidden="true">#</a> 运行脚本</h1><p>每次推送时，在当前目录运行<code>sh push.sh</code>命令即可，接下来会提示你输入要提交的信息，输入完点击回车即可</p><p>注：如果加入了hexo项目的构建部署命令，每次推送时也会帮你完成部署</p><h1 id="祝君无bug" tabindex="-1"><a class="header-anchor" href="#祝君无bug" aria-hidden="true">#</a> 祝君无Bug~</h1>',8),p={},t=(0,a(3744).Z)(p,[["render",function(n,s){return e}]])}}]);