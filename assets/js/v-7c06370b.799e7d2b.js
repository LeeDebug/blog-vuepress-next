"use strict";(self.webpackChunkblog_vuepress_next=self.webpackChunkblog_vuepress_next||[]).push([[2822],{3154:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-7c06370b",path:"/views/front-end/android-wx-input.html",title:"安卓微信浏览器中type=file的input框无法使用",lang:"en-US",frontmatter:{title:"安卓微信浏览器中type=file的input框无法使用",categories:["Vue"],tags:["Vue"],keywords:"Vue",description:"安卓微信浏览器中type=file的input框无法使用",cover:"https://cdn.jsdelivr.net/gh/LeeDebug/PicGo/img/20210225125447.png",date:"2021-01-17T19:35:03.000Z"},excerpt:"",headers:[],git:{createdTime:1638196944e3,updatedTime:1638196944e3,contributors:[{name:"qducc",email:"961150665@qq.com",commits:1}]}}},9240:(n,a,s)=>{s.r(a),s.d(a,{default:()=>e});const t=(0,s(6252).uE)('<blockquote><p>如果使用html的input框设为<code>type=file</code>来选择文件，在安卓的微信中打开页面时，会提示<code>暂无可使用应用</code>等错误提示</p></blockquote><h1 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h1><p>若要选择图片，需将input框的accept属性设为<code>image/*</code>；若要选择文件，需将此属性设为<code></code>空</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>\n  <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el =&gt; { if (el) uploadRefs = el }<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">:accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>acceptFileTypeArr<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleUploadFunc<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> acceptFileTypeArr<span class="token operator">:</span> any <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// 当前支持上传类型</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>uploadType<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;image&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&#39;image/*&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>uploadType<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h1 id="祝君无bug" tabindex="-1"><a class="header-anchor" href="#祝君无bug" aria-hidden="true">#</a> 祝君无Bug~</h1>',6),e={render:function(n,a){return t}}}}]);