"use strict";(self.webpackChunkblog_vuepress_next=self.webpackChunkblog_vuepress_next||[]).push([[7114],{6769:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-1edd1854",path:"/views/front-end/vue-bus-ts.html",title:"中央事件总线插件vue-bus-ts",lang:"en-US",frontmatter:{title:"中央事件总线插件vue-bus-ts",categories:["Vue"],tags:["Vue"],keywords:"vue插件,事件总线",description:"描述",cover:"https://cdn.jsdelivr.net/gh/LeeDebug/PicGo/img/20201111165942.png",date:"2020-11-07T18:28:46.000Z"},excerpt:"",headers:[{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"注册",slug:"注册",children:[]},{level:2,title:"注册事件",slug:"注册事件",children:[]},{level:2,title:"调用事件",slug:"调用事件",children:[]},{level:2,title:"注销事件",slug:"注销事件",children:[]},{level:2,title:"订阅事件？",slug:"订阅事件",children:[]}],git:{createdTime:1637766986e3,updatedTime:1637766986e3,contributors:[{name:"licc",email:"961150665@qq.com",commits:1}]}}},768:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var e=a(6252);const p=(0,e._)("blockquote",null,[(0,e._)("p",null,"项目中难免会遇到非父子组件之间的传参与通信问题，遂整理此文。")],-1),t=(0,e._)("h1",{id:"简介",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),(0,e.Uk)(" 简介")],-1),o={href:"https://github.com/wowill/vue-event-bus",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("vue-bus-ts"),l=(0,e.Uk)(" 是一款支持在ts环境下使用的全局事件总线插件。"),u=(0,e.uE)('<h1 id="安装及使用方法" tabindex="-1"><a class="header-anchor" href="#安装及使用方法" aria-hidden="true">#</a> 安装及使用方法</h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i -S vue-bus-ts\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="注册" tabindex="-1"><a class="header-anchor" href="#注册" aria-hidden="true">#</a> 注册</h2><p>安装后需要在main.ts中引入并注册，挂载到全局的Vue实例上即可</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code># main<span class="token punctuation">.</span>ts\n\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> EventBus <span class="token keyword">from</span> <span class="token string">&#39;vue-bus-ts&#39;</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>EventBus<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventBus<span class="token punctuation">.</span>Bus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  bus<span class="token punctuation">,</span>\n  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="注册事件" tabindex="-1"><a class="header-anchor" href="#注册事件" aria-hidden="true">#</a> 注册事件</h2><p>在调用事件前，需要实现注册该事件，否则不会生效</p><p>一般写在vue文件的mounted或者created生命周期中</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code># <span class="token operator">*</span><span class="token punctuation">.</span>vue\n  \n<span class="token keyword">var</span> eventId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">params<span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// params is the parameter passed in by $emit</span>\n  <span class="token comment">// do something...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="调用事件" tabindex="-1"><a class="header-anchor" href="#调用事件" aria-hidden="true">#</a> 调用事件</h2><p>注册成功后，打印<code>this.$bus</code>即可看到当前的事件总线实例，下面为调用的方法</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code># <span class="token operator">*</span><span class="token punctuation">.</span>vue\n<span class="token comment">// params can pass in any form of value, including Array, Object, String, Number, null, undefined or even array expansion items.or example, </span>\n\n<span class="token keyword">var</span> eventResult <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>\n\n<span class="token number">1.</span> <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token number">2.</span> <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token number">3.</span> <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span>\n<span class="token number">4.</span> <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> d <span class="token operator">=</span> <span class="token punctuation">{</span>a<span class="token operator">:</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">}</span>\n    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b <span class="token punctuation">,</span>c<span class="token punctuation">,</span> d<span class="token punctuation">)</span>\n<span class="token number">5.</span> <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token number">6.</span> <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="注销事件" tabindex="-1"><a class="header-anchor" href="#注销事件" aria-hidden="true">#</a> 注销事件</h2><p>如果不注销的话，下一次<code>$on</code>注册同一个事件时，会生成两个相同的事件，调用时会触发n次。所以建议在离开当前页面或当前模块时注销该事件，即写在<code>beforeRouterLeave</code>中（如果开启了keep-alive，可写在deactivated中）。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code># <span class="token operator">*</span><span class="token punctuation">.</span>vue\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">,</span> eventId<span class="token punctuation">)</span> <span class="token comment">// To unbind event binding, eventId is the return value of this.$bus.$on </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="订阅事件" tabindex="-1"><a class="header-anchor" href="#订阅事件" aria-hidden="true">#</a> 订阅事件？</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code># <span class="token operator">*</span><span class="token punctuation">.</span>vue\n\n<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$subscribed</span><span class="token punctuation">(</span><span class="token string">&#39;event_name&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// do something...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h1 id="祝君无bug" tabindex="-1"><a class="header-anchor" href="#祝君无bug" aria-hidden="true">#</a> 祝君无Bug~</h1>',19),r={},i=(0,a(3744).Z)(r,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,t,(0,e._)("p",null,[(0,e._)("a",o,[c,(0,e.Wm)(a)]),l]),u],64)}]])}}]);